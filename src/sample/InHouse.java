package sample;

import javafx.beans.property.DoubleProperty;
import javafx.beans.property.IntegerProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;

public class InHouse extends Part {

    private SimpleIntegerProperty machineID;

    //fixme Redundant constructor?

    /**
     *
     * @param id Id number
     * @param name Name of part
     * @param price price of part
     * @param stock how many in stock
     * @param min minimal acceptable quantity
     * @param max maximum that can be stored
     * @param machineID Not sure what this is supposed to be fixme
     */
    public InHouse(IntegerProperty id, SimpleStringProperty name, DoubleProperty price, IntegerProperty stock,
                   IntegerProperty min, IntegerProperty max, SimpleIntegerProperty machineID) {
        super(id, name, price, stock, min, max);
        this.machineID = machineID;
    }

    /**
     *
     * @param id id number
     * @param name Name of part
     * @param price price of part
     * @param stock quantity on hand
     * @param min minimum quantity
     * @param max max that can be stored
     * @param machineID not sure
     */
    public InHouse(int id, String name, double price, int stock, int min, int max, int machineID) {
        super(id, name, price, stock, min, max);
        this.machineID = new SimpleIntegerProperty(machineID);
    }

    /**
     *
     * @return
     */
    public int getMachineID() {
        return machineID.get();
    }

    //fixme how did this get here? Probably not necessary
    //ok, it's auto-generated by my IDE.  I'm tempted to leave it.  fixme run by instructor prior to submission

    /**
     *
     * @return
     */
    public SimpleIntegerProperty machineIDProperty() {
        return machineID;
    }

    /**
     *
     * @param machineID
     */
    public void setMachineID(int machineID) {
        this.machineID.set(machineID);
    }
}
